const hana = require("@sap/hana-client");
const { connection } = require("../config/dbConfig");

const createTable = async () => {
  const query = `
    CREATE TABLE "DBADMIN"."users" (
      id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
      first_name VARCHAR(50),
      last_name VARCHAR(50),
      email VARCHAR(100) UNIQUE,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    )
  `;

  try {
    await connection.exec(query);
    console.log("Users table created successfully");
  } catch (error) {
    if (error.code === 288) {
      console.log("Users table already exists. Initialization skipped.");
    } else {
      console.error("Error initializing database:", error.message);
      throw error;
    }
  }
};

const getAllUsers = async () => {
  try {
    const query = `SELECT * FROM "DBADMIN"."users"`;
    return connection.exec(query);
  } catch (error) {
    console.log(error);
  }
};

const getUserById = async (id) => {
  const query = `SELECT * FROM "DBADMIN"."users" WHERE id = ?`;
  const user = connection.prepare(query).exec([id]);
  console.log(user);
  return user;
};

const createUser = async (firstName, lastName, email) => {
  const query = `INSERT INTO "DBADMIN"."users" (first_name, last_name, email) VALUES (?, ?, ?)`;
  const user = connection.prepare(query).exec([firstName, lastName, email]);
  return user;
};

const updateUser = async (id, firstName, lastName, email) => {
  const query = `UPDATE "DBADMIN"."users" SET first_name = ?, last_name = ?, email = ? WHERE id = ?`;
  return connection.prepare(query).exec([firstName, lastName, email, id]);
};

const deleteUser = async (id) => {
  const query = `DELETE FROM "DBADMIN"."users" WHERE id = ?`;
  return connection.prepare(query).exec([id]);
};

module.exports = {
  getAllUsers,
  getUserById,
  createUser,
  updateUser,
  deleteUser,
  createTable,
};
